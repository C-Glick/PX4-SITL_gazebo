name: Merge Upstream Changes
on:
 schedule:
    - cron: '*/30 * * * *' # every 30 minutes
 workflow_dispatch: # on button click

jobs:
  Merge_Upstream_Changes:
    runs-on: ubuntu-latest
    name: Merge upstream with master
    steps:
     - uses: actions/checkout@v2
       with:
        ref: master                     #target branch
        fetch-depth: ''                 #fetch all history  
        #submodules: 'recursive'     # possibly needed in your situation  
     - name: Merge Upstream
       run: |
         upstream_url="https://github.com/PX4/PX4-SITL_gazebo.git"
         upstream_branch="master"
         target_branch="master"
         
         git config --global user.name 'Actions Bot'
         git config --global user.email '<>'
         # "git checkout master" is unnecessary, set by ref: above ^
         git pull --ff-only --unshallow  # unshallow option is very important, you would get
                               # complaints about unrelated histories without it.
                               # (but actions/checkout@v2 can also be instructed
                               # to fetch all git depth right from the start)
         git remote add upstream "$upstream_url"
         git fetch upstream
         
         PULL_OUTPUT=$(git pull --no-rebase -s recursive -X ours upstream "$upstream_branch")   #pull from upstream, merge favoring our changes if conflicts
         
         echo "Pull Output: '$PULL_OUTPUT' "
         
         if [ "$PULL_OUTPUT" != "Already up to date." ]; then
           #set commit message
           git commit --amend -m "Merge changes from upstream" -m "Upstream: $upstream_url \n Upstream branch: $upstream_branch"
           #push changes to origin 
           git push origin "$target_branch"
         else
           echo "* Fork already up to date with upstream. Nothing to merge. *"
         fi
